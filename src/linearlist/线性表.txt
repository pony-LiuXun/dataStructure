一、线性表的特性:
    线性表：一定是有序的多个数据元素组成的，除了首项没有前驱，尾项没有后驱，其他的元素都必须持有前一个元素的前驱(地址指针)。
    
        用数学序列表示(A1......A(i-1).A(i).A(i+1).....)
    线性表的安全机制：只有相同的数据类型，才能进入该序列。

    线性表的抽象数据类型(基本API),在应用程序中较为复杂的线性表的操作，都是由这几个基本API组合而成
        1、initList(E e);初始化一个线性表
        2、boolean isEmpty();判断线性表是否为空,返回true或者false;
        3、clear();清空一个线性表;
        4、Object get(int index);获取线性表中第index位置的元素，并返回
        5、ContainElem(E e);判断线性表中是否包含该元素,若包含返回该元素的下标,不包含返回-1;
        6、void insert(int index,Object b);在线性表 中的第index个位置输入e的新元素;
        7、void remove(int index);删除表中的某个位置的元素
        8、int length();返回线性表的长度
    线性表的几种存储结构:
        (1)、顺序表存储结构：
            一、数组在内存空间中开辟一个固定大小的内存空间，将线性表的数据元素依次存放。
            
            注意点：数组长度并不一定等于，线性表的长度，但线性表的长度一定是小于等于数组的长度。
                    数组自身并可变，但是线性是可以数组长度的范围内，可变的
            优点：
                无须为表示表中的元素之间的逻辑关系而增加额外的存储空间,可以快速的存取表中任一位置的元素
            缺点:插入和删除操作需要移动其他的数据元素，当线性表的当度变化较大时无法确定存储空间的长度，容易造成存储空间的碎片。
        
        (2)、链式存储结构:
                特点:
                    1、用一组存储单元存储线性表的数据，这些单元在内存空间中可以是连续，也可以是散落在内存中的存储方式
                    2、链式结构中每个存储单元除了存储数据元素外，还需要存储后继数据元素的存储地址
                结点:由数据域和指针域组成。
                    1、数据域:存储数据元素的区域。
                    2、指针域:存储后继元素的区域。
            一:单链表:由多个结点组成的线性表。
                    特点:每个结点中只包含一个指针域
                    头结点:是为了操作的统一和方便设立，放在第一个结点之前，头结点的数据域一般没有什么意义(一般用来存储链表的长度)
                    有了头结点.对在第一元素结点前插入结点和删除第一结点，其操作与其它结点的操作就统一了,头结点不一定是链表必须要素

